!function(){var t="undefined"!=typeof window;t||(global.require=require);var e=t?window:global;if(!e.$fsx){var r=e.$fsx={};r.f={},r.m={},r.r=function(t){var e=r.m[t];if(e)return e.m.exports;var n=r.f[t];return n?((e=r.m[t]={}).exports={},e.m={exports:e.exports},n(e.m,e.exports),e.m.exports):void 0}}}(),function(t){t.f[0]=function(e,r){Object.defineProperty(r,"__esModule",{value:!0});const n=t.r(1),o={delimiter:"/",prefix:""},i={namespaceOnly:Error("It's not enough to provide a namespace only"),noargs:Error("Provide at least 2 strings as arguments"),types:TypeError("Namespace and short forms must be stings and options must be a plain object")};r.default=function(t,...e){if("string"!=typeof t)throw i.types;if(0===arguments.length)throw i.noargs;if(1===arguments.length)throw i.namespaceOnly;let r=e,s=o;const a=e.slice(0,-1),c=e[e.length-1];if(n(c))r=a,s=Object.assign({},o,c);else if("string"!=typeof c)throw i.types;const{prefix:f,delimiter:u}=s;return r.reduce((e,r)=>{const n=r.toUpperCase();return e.hasOwnProperty(n)||Object.defineProperty(e,n,{enumerable:!0,value:f+t+u+n}),e},{})}},t.f[1]=function(t,e){var r="[object Object]";var n,o,i=Function.prototype,s=Object.prototype,a=i.toString,c=s.hasOwnProperty,f=a.call(Object),u=s.toString,p=(n=Object.getPrototypeOf,o=Object,function(t){return n(o(t))});t.exports=function(t){if(!(e=t)||"object"!=typeof e||u.call(t)!=r||function(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}(t))return!1;var e,n=p(t);if(null===n)return!0;var o=c.call(n,"constructor")&&n.constructor;return"function"==typeof o&&o instanceof o&&a.call(o)==f}},t.r(0)}($fsx);